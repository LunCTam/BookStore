@page "/Books/delete/{Id}"
@attribute [Authorize(Roles = "admin")]

@inject IBookRepository _bookRepository
@inject NavigationManager  _navManager
@inject IFileUpload _fileUpload

<h3 class="card-title">Are you sure you want to Delete this record?</h3>

@if (!isSuccess)
{
    <LoadMessage Message="Something went wrong with the Book Delete..." />
}
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <LoadMessage Message="Invalid Selection. Please Try Again" />
}
else if (Model == null)
{
    <LoadMessage Message="Please wait..." />
}
else
{
    <div class="col-md-6">
        <h4>Book Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <strong>Author</strong>
                </td>
                <td>
                    @if(Model.Author == null)
                    {
                        <span>No Author Recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.AuthorId">
                            @Model.Author.Firstname @Model.Author.Lastname
                        </a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Summary</strong>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <strong>Published Year</strong>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <strong>ISBN</strong>
                </td>
                <td>@Model.ISBN</td>
            </tr>
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
        </table>
        <br />
        <button onclick="DeleteBook" class="btn btn-danger">
            <span class="oi oi-delete"></span>
            Submit Delete 
        </button>
        <button @onclick="BacktoList" class="btn btn-outline-secondary">
            <span class="oi oi-media-step-backward"></span>
            Back to List
        </button>>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isSuccess = true;

    private Book Model = new Book();

    protected async override Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _bookRepository.Get(Endpoints.BooksEndpoint, id);
    }

    private async Task DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        bool isSuccess = await _bookRepository.Delete(Endpoints.BooksEndpoint, Model.Id);
        if (isSuccess)
        {
            BacktoList();
        }
    }

    private void BacktoList()
    {
        _navManager.NavigateTo("/Books/");
    }
}

