@page "/authors/create"
@attribute [Authorize(Roles ="admin")]

@inject IAuthorRepository _authorRepository
@inject NavigationManager  _navManager

<h3 class="card-title">Create New Author</h3>

@if (!isSuccess)
{
    <LoadMessage Message="Something went wrong with the Author create ..." />
}
<EditForm Model="Model" OnValidSubmit="CreateAuthor">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText @bind-Value="Model.Firstname" class="form-control" id="firstname" />
    </div>
    <div class="form-group">
        <label for="lastname">Last Name</label>
        <InputText @bind-Value="Model.Lastname" class="form-control" id="lastname" />
    </div>
    <div class="form-group">
        <label for="bio">Biography</label>
        <InputTextArea @bind-Value="Model.Bio" class="form-control" id="bio" />
    </div>
    <br />
    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Submit Create
    </button>
    <button @onclick="BacktoList" class="btn btn-outline-secondary">
        <span class="oi oi-media-step-backward"></span>
        Back to List
    </button>
</EditForm>

@code {
    private Author Model = new Author();
    private bool isSuccess = true;

    private async Task CreateAuthor()
    {
        bool isSuccess = await _authorRepository.Create(Endpoints.AuthorsEndpoint, Model);
        if (isSuccess)
        {
            BacktoList();
        }
    }

    private void BacktoList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
